using CityApiClientGenerated;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using RestEase;
using System.Net.Http;
using WebUI.Client;

namespace WebUI
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        public void ConfigureServices(IServiceCollection services)
        {
            services.AddControllersWithViews();

            //// Registering autogenerated client
            services.AddHttpClient("ConsumerApiClient");
            services.AddScoped(scope => 
            {
                var httpClient = scope.GetService<IHttpClientFactory>().CreateClient("ConsumerApiClient");
                var baseUrl = Configuration["ConsumerApiAddress"];
                return new CityApiClient(baseUrl, httpClient);
            });

            //// Registering reast ease client
            services.AddScoped(scope => 
            {
                var baseUrl = Configuration["UserApiAddress"];
                return RestClient.For<IUserRestClient>(baseUrl);
            });
        }
         
        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            app.UseDeveloperExceptionPage();
            app.UseStaticFiles();

            app.UseRouting();

            app.UseEndpoints(endpoints =>
            {
                endpoints.MapDefaultControllerRoute();
            });
        }
    }
}
